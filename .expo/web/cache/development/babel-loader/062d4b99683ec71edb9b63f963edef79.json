{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport styled from \"styled-components/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Container = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  background-color: white;\\n  align-items: center;\\n  justify-content: center;\\n\"])));\nvar Info = styled.Text(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  font-size: 18px;\\n  color: blue;\\n  font-weight: 500;\\n  margin-bottom: 10px;\\n\"])));\nvar Input = styled.TextInput(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  font-size: 18px;\\n  color: blue;\\n  font-weight: 500;\\n  border: 1px solid black;\\n  outline: none;\\n  margin-bottom: 10px;\\n\"])));\nexport default function App() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      number = _React$useState2[0],\n      setNumber = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      last = _React$useState4[0],\n      setLast = _React$useState4[1];\n\n  var storeData = function storeData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@storage_Key\", jsonValue));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var getData = function getData() {\n    var jsonValue;\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@storage_Key\"));\n\n          case 3:\n            jsonValue = _context2.sent;\n            return _context2.abrupt(\"return\", jsonValue != null ? JSON.parse(jsonValue) : null);\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  React.useEffect(function () {\n    var data = getData();\n    setLast(data);\n  }, []);\n  return _jsx(Container, {\n    children: _jsxs(SafeAreaView, {\n      children: [_jsx(Info, {\n        children: last\n      }), _jsx(Input, {\n        onChangeText: setNumber(),\n        value: number,\n        placeholder: \"useless placeholder\",\n        keyboardType: \"numeric\"\n      }), _jsx(Button, {\n        title: \"Press me\",\n        onPress: function onPress() {\n          return storeData(number);\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/99555/Desktop/Work/my-project/App.js"],"names":["React","AsyncStorage","styled","Container","View","Info","Text","Input","TextInput","App","useState","number","setNumber","last","setLast","storeData","value","jsonValue","JSON","stringify","setItem","getData","getItem","parse","useEffect","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,IAAMC,SAAS,GAAGD,MAAM,CAACE,IAAV,wKAAf;AAMA,IAAMC,IAAI,GAAGH,MAAM,CAACI,IAAV,+JAAV;AAMA,IAAMC,KAAK,GAAGL,MAAM,CAACM,SAAV,6MAAX;AASA,eAAe,SAASC,GAAT,GAAe;AAC5B,wBAA4BT,KAAK,CAACU,QAAN,CAAe,EAAf,CAA5B;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AACA,yBAAwBZ,KAAK,CAACU,QAAN,CAAe,IAAf,CAAxB;AAAA;AAAA,MAAOG,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAERC,YAAAA,SAFQ,GAEIC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAFJ;AAAA;AAAA,6CAGRf,YAAY,CAACmB,OAAb,CAAqB,cAArB,EAAqCH,SAArC,CAHQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAQA,MAAMI,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEYpB,YAAY,CAACqB,OAAb,CAAqB,cAArB,CAFZ;;AAAA;AAENL,YAAAA,SAFM;AAAA,8CAGLA,SAAS,IAAI,IAAb,GAAoBC,IAAI,CAACK,KAAL,CAAWN,SAAX,CAApB,GAA4C,IAHvC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAQAjB,EAAAA,KAAK,CAACwB,SAAN,CAAgB,YAAM;AACpB,QAAIC,IAAI,GAAGJ,OAAO,EAAlB;AACAP,IAAAA,OAAO,CAACW,IAAD,CAAP;AACD,GAHD,EAGG,EAHH;AAIA,SACE,KAAC,SAAD;AAAA,cACE,MAAC,YAAD;AAAA,iBACE,KAAC,IAAD;AAAA,kBAAOZ;AAAP,QADF,EAEE,KAAC,KAAD;AACE,QAAA,YAAY,EAAED,SAAS,EADzB;AAEE,QAAA,KAAK,EAAED,MAFT;AAGE,QAAA,WAAW,EAAC,qBAHd;AAIE,QAAA,YAAY,EAAC;AAJf,QAFF,EAQE,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAyB,QAAA,OAAO,EAAE;AAAA,iBAAMI,SAAS,CAACJ,MAAD,CAAf;AAAA;AAAlC,QARF;AAAA;AADF,IADF;AAcD","sourcesContent":["import React from \"react\";\nimport { Text, View, TextInput, SafeAreaView, Button } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport styled from \"styled-components/native\";\n\nconst Container = styled.View`\n  flex: 1;\n  background-color: white;\n  align-items: center;\n  justify-content: center;\n`;\nconst Info = styled.Text`\n  font-size: 18px;\n  color: blue;\n  font-weight: 500;\n  margin-bottom: 10px;\n`;\nconst Input = styled.TextInput`\n  font-size: 18px;\n  color: blue;\n  font-weight: 500;\n  border: 1px solid black;\n  outline: none;\n  margin-bottom: 10px;\n`;\n\nexport default function App() {\n  const [number, setNumber] = React.useState([]);\n  const [last, setLast] = React.useState(null);\n\n  const storeData = async (value) => {\n    try {\n      const jsonValue = JSON.stringify(value);\n      await AsyncStorage.setItem(\"@storage_Key\", jsonValue);\n    } catch (e) {\n      // saving error\n    }\n  };\n  const getData = async () => {\n    try {\n      const jsonValue = await AsyncStorage.getItem(\"@storage_Key\");\n      return jsonValue != null ? JSON.parse(jsonValue) : null;\n    } catch (e) {\n      // error reading value\n    }\n  };\n  React.useEffect(() => {\n    let data = getData();\n    setLast(data);\n  }, []);\n  return (\n    <Container>\n      <SafeAreaView>\n        <Info>{last}</Info>\n        <Input\n          onChangeText={setNumber()}\n          value={number}\n          placeholder=\"useless placeholder\"\n          keyboardType=\"numeric\"\n        />\n        <Button title=\"Press me\" onPress={() => storeData(number)} />\n      </SafeAreaView>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport styled from \"styled-components/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Container = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  background-color: white;\\n  align-items: center;\\n  justify-content: center;\\n\"])));\nvar Info = styled.Text(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  font-size: 18px;\\n  color: blue;\\n  font-weight: 500;\\n  margin-bottom: 10px;\\n\"])));\nvar Input = styled.TextInput(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  font-size: 18px;\\n  color: blue;\\n  font-weight: 500;\\n  border: 1px solid black;\\n  margin-bottom: 10px;\\n\"])));\nexport default function App() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      number = _React$useState2[0],\n      setNumber = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      response = _React$useState4[0],\n      setResponse = _React$useState4[1];\n\n  var storeData = function storeData(value) {\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            number.map(function (n) {\n              if (value === n) {\n                setError(\"ასეთი ციფრი უკვე არსებობს\");\n              } else {\n                setNumber(function (number) {\n                  return [].concat(_toConsumableArray(number), [value]);\n                });\n              }\n            });\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@input\", JSON.stringify(number)));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getData = function getData(value) {\n    value > 100 ? setResponse(\"შეიყვანეთ 1-დან 100-მდე ციფრი\") : setResponse(\"\");\n    setNumber(value);\n  };\n\n  React.useEffect(function _callee() {\n    var value;\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@input\"));\n\n          case 2:\n            value = _context2.sent;\n\n            if (number !== null) {\n              setNumber(value);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return _jsx(Container, {\n    children: _jsxs(SafeAreaView, {\n      children: [_jsx(Info, {\n        children: response\n      }), _jsx(Info, {\n        children: JSON.stringify(number)\n      }), _jsx(Input, {\n        onChangeText: function onChangeText(n) {\n          return getData(n);\n        },\n        value: number,\n        placeholder: \"\\u10E8\\u10D4\\u10D8\\u10E7\\u10D5\\u10D0\\u10DC\\u10D4\\u10D7 1-\\u10D3\\u10D0\\u10DC 100-\\u10DB\\u10D3\\u10D4 \\u10EA\\u10D8\\u10E4\\u10E0\\u10D8\",\n        keyboardType: \"numeric\"\n      }), _jsx(Button, {\n        title: \"Press me\",\n        onPress: function onPress() {\n          return storeData(number);\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/99555/Desktop/Work/my-project/App.js"],"names":["React","AsyncStorage","styled","Container","View","Info","Text","Input","TextInput","App","useState","number","setNumber","response","setResponse","storeData","value","map","n","setError","setItem","JSON","stringify","getData","useEffect","getItem"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,IAAMC,SAAS,GAAGD,MAAM,CAACE,IAAV,wKAAf;AAMA,IAAMC,IAAI,GAAGH,MAAM,CAACI,IAAV,+JAAV;AAMA,IAAMC,KAAK,GAAGL,MAAM,CAACM,SAAV,2LAAX;AAQA,eAAe,SAASC,GAAT,GAAe;AAC5B,wBAA4BT,KAAK,CAACU,QAAN,CAAe,EAAf,CAA5B;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AACA,yBAAgCZ,KAAK,CAACU,QAAN,CAAe,EAAf,CAAhC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAChBL,YAAAA,MAAM,CAACM,GAAP,CAAW,UAACC,CAAD,EAAO;AAChB,kBAAIF,KAAK,KAAKE,CAAd,EAAiB;AACfC,gBAAAA,QAAQ,CAAC,2BAAD,CAAR;AACD,eAFD,MAEO;AACLP,gBAAAA,SAAS,CAAC,UAACD,MAAD;AAAA,sDAAgBA,MAAhB,IAAwBK,KAAxB;AAAA,iBAAD,CAAT;AACD;AACF,aAND;AADgB;AAAA,6CASVf,YAAY,CAACmB,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeX,MAAf,CAA/B,CATU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAWA,MAAMY,OAAO,GAAG,SAAVA,OAAU,CAACP,KAAD,EAAW;AACzBA,IAAAA,KAAK,GAAG,GAAR,GACIF,WAAW,CAAC,+BAAD,CADf,GAEIA,WAAW,CAAC,EAAD,CAFf;AAGAF,IAAAA,SAAS,CAACI,KAAD,CAAT;AACD,GALD;;AAMAhB,EAAAA,KAAK,CAACwB,SAAN,CAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACMvB,YAAY,CAACwB,OAAb,CAAqB,QAArB,CADN;;AAAA;AACRT,YAAAA,KADQ;;AAEd,gBAAIL,MAAM,KAAK,IAAf,EAAqB;AACnBC,cAAAA,SAAS,CAACI,KAAD,CAAT;AACD;;AAJa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB,EAKG,EALH;AAMA,SACE,KAAC,SAAD;AAAA,cACE,MAAC,YAAD;AAAA,iBACE,KAAC,IAAD;AAAA,kBAAOH;AAAP,QADF,EAEE,KAAC,IAAD;AAAA,kBAAOQ,IAAI,CAACC,SAAL,CAAeX,MAAf;AAAP,QAFF,EAGE,KAAC,KAAD;AACE,QAAA,YAAY,EAAE,sBAACO,CAAD;AAAA,iBAAOK,OAAO,CAACL,CAAD,CAAd;AAAA,SADhB;AAEE,QAAA,KAAK,EAAEP,MAFT;AAGE,QAAA,WAAW,EAAC,mIAHd;AAIE,QAAA,YAAY,EAAC;AAJf,QAHF,EASE,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAyB,QAAA,OAAO,EAAE;AAAA,iBAAMI,SAAS,CAACJ,MAAD,CAAf;AAAA;AAAlC,QATF;AAAA;AADF,IADF;AAeD","sourcesContent":["import React from \"react\";\nimport { Text, View, TextInput, SafeAreaView, Button } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport styled from \"styled-components/native\";\n\nconst Container = styled.View`\n  flex: 1;\n  background-color: white;\n  align-items: center;\n  justify-content: center;\n`;\nconst Info = styled.Text`\n  font-size: 18px;\n  color: blue;\n  font-weight: 500;\n  margin-bottom: 10px;\n`;\nconst Input = styled.TextInput`\n  font-size: 18px;\n  color: blue;\n  font-weight: 500;\n  border: 1px solid black;\n  margin-bottom: 10px;\n`;\n\nexport default function App() {\n  const [number, setNumber] = React.useState([]);\n  const [response, setResponse] = React.useState(\"\");\n\n  const storeData = async (value) => {\n    number.map((n) => {\n      if (value === n) {\n        setError(\"ასეთი ციფრი უკვე არსებობს\");\n      } else {\n        setNumber((number) => [...number, value]);\n      }\n    });\n\n    await AsyncStorage.setItem(\"@input\", JSON.stringify(number));\n  };\n  const getData = (value) => {\n    value > 100\n      ? setResponse(\"შეიყვანეთ 1-დან 100-მდე ციფრი\")\n      : setResponse(\"\");\n    setNumber(value);\n  };\n  React.useEffect(async () => {\n    const value = await AsyncStorage.getItem(\"@input\");\n    if (number !== null) {\n      setNumber(value);\n    }\n  }, []);\n  return (\n    <Container>\n      <SafeAreaView>\n        <Info>{response}</Info>\n        <Info>{JSON.stringify(number)}</Info>\n        <Input\n          onChangeText={(n) => getData(n)}\n          value={number}\n          placeholder=\"შეიყვანეთ 1-დან 100-მდე ციფრი\"\n          keyboardType=\"numeric\"\n        />\n        <Button title=\"Press me\" onPress={() => storeData(number)} />\n      </SafeAreaView>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}